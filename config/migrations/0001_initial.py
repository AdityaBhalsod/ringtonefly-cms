# Generated by Django 3.1.14 on 2021-12-18 07:57

import ckeditor_uploader.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cms', '0022_auto_20180620_1551'),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutUsPlugin',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='config_aboutusplugin', serialize=False, to='cms.cmsplugin')),
                ('title', models.CharField(default='About Us', help_text='Title of About us.', max_length=255, verbose_name='Title')),
                ('subtitle', models.CharField(help_text='Title of About us.', max_length=255, verbose_name='Sub title')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(default='', help_text='Content of About us.', verbose_name='Content')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Name of category', max_length=255, verbose_name='Name')),
                ('meta_tag', models.TextField(blank=True, default='', null=True, verbose_name='Meta tag')),
                ('slug', models.SlugField(blank=True, default='', max_length=255, null=True, unique=True)),
                ('page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cms.page')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='CategoryPanelPlugin',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='config_categorypanelplugin', serialize=False, to='cms.cmsplugin')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='CategoryPlugin',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='config_categoryplugin', serialize=False, to='cms.cmsplugin')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('your_name', models.CharField(help_text='Please enter your name.', max_length=255, verbose_name='Your name')),
                ('email_address', models.CharField(help_text='Please enter your email address.', max_length=255, verbose_name='Email address')),
                ('subject', models.CharField(default='', help_text='Please enter a subject.', max_length=255, verbose_name='Subject')),
                ('message', models.TextField(default='', help_text='Please enter a message.', verbose_name='Message')),
            ],
            options={
                'verbose_name': 'Contact Us',
                'verbose_name_plural': 'Contact Us',
            },
        ),
        migrations.CreateModel(
            name='ContactUsPlugin',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='config_contactusplugin', serialize=False, to='cms.cmsplugin')),
                ('title', models.CharField(default='Contact Us', help_text='Title of contact us.', max_length=255, verbose_name='Title')),
                ('tagline', models.CharField(help_text='Tagline of contact us.', max_length=255, verbose_name='Tagline')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='ContainerPlugin',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='config_containerplugin', serialize=False, to='cms.cmsplugin')),
                ('title', models.CharField(blank=True, help_text='Title of container.', max_length=255, null=True, verbose_name='Title')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(default='', help_text='Content of container', verbose_name='Content')),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='ContainerPluginV2',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='config_containerpluginv2', serialize=False, to='cms.cmsplugin')),
                ('title', models.CharField(blank=True, help_text='Title of container.', max_length=255, null=True, verbose_name='Title')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(default='', help_text='Content of container', verbose_name='Content')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='FavoritePlugin',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='config_favoriteplugin', serialize=False, to='cms.cmsplugin')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='FetchRingtonePlugin',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='config_fetchringtoneplugin', serialize=False, to='cms.cmsplugin')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='FooterPlugin',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='config_footerplugin', serialize=False, to='cms.cmsplugin')),
                ('tagline', models.CharField(help_text='Tagline of footer.', max_length=255, verbose_name='Tagline')),
                ('copyright', models.CharField(help_text='Copyright line of footer.', max_length=255, verbose_name='Copyright line')),
            ],
            options={
                'verbose_name': 'Footer',
                'verbose_name_plural': 'Footer',
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='LimitationObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('popular_container', models.PositiveIntegerField(default=12)),
                ('new_container', models.PositiveIntegerField(default=12)),
                ('top_50_container', models.PositiveIntegerField(default=12)),
                ('category_page', models.PositiveIntegerField(default=12)),
                ('individual_ringtone_page', models.PositiveIntegerField(default=12)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ringtone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Title of ringtone', max_length=255, verbose_name='Title')),
                ('like_count', models.BigIntegerField(default=0, help_text='Likes count of ringtone', verbose_name='Like')),
                ('download_count', models.BigIntegerField(default=0, help_text='Download count of ringtone', verbose_name='Download')),
                ('android_ringtone_file', models.FileField(blank=True, null=True, upload_to='android/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp3'])], verbose_name='Android ringtone')),
                ('iphone_ringtone_file', models.FileField(blank=True, null=True, upload_to='iphone/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['m4r'])], verbose_name='Iphone ringtone')),
                ('image', models.FileField(blank=True, null=True, upload_to='Ringtone/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'bmp', 'png'])], verbose_name='Image')),
                ('description', models.CharField(blank=True, help_text='Description of ringtone', max_length=255, null=True, verbose_name='Description')),
                ('slug', models.SlugField(blank=True, default='', max_length=255, null=True, unique=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='config.category')),
                ('page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cms.page')),
                ('title', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cms.title')),
            ],
            options={
                'verbose_name': 'Ringtone',
                'verbose_name_plural': 'Ringtones',
            },
        ),
        migrations.CreateModel(
            name='SEOTool',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='config_seotool', serialize=False, to='cms.cmsplugin')),
                ('canonicalization', models.BooleanField(default=False, verbose_name='Canonicalization for current website ?')),
                ('canonicalization_url', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Canonicalization url')),
                ('noindex', models.BooleanField(default=True, verbose_name='Noindex for current website ?')),
                ('common_keywords', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Common Keywords')),
                ('common_description', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Common Description')),
                ('open_graph_tag', models.BooleanField(default=True, verbose_name='Generate automatic og:tag ?')),
                ('twitter_tag', models.BooleanField(default=True, verbose_name='Generate automatic twitter:tag ?')),
                ('home_page_meta_tag', models.TextField(blank=True, default='', help_text="You can adding any meta tag it's only work homepage only.", null=True, verbose_name='Home page meta-tag')),
            ],
            options={
                'verbose_name': 'SEO Tool',
                'verbose_name_plural': 'SEO Tool',
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='SingleFavoritePlugin',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='config_singlefavoriteplugin', serialize=False, to='cms.cmsplugin')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='SiteConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('favicon', models.FileField(blank=True, null=True, upload_to='favicon', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['ico', 'icos'])], verbose_name='Favicon icon')),
                ('ads_script', models.TextField(blank=True, default='', null=True, verbose_name='Ads code / script')),
                ('bottom_ads_script', models.TextField(blank=True, default='', null=True, verbose_name='Bottem Ads code / script')),
                ('analytics_id', models.CharField(blank=True, default='', help_text='Please add google analytics id.', max_length=255, null=True)),
                ('google_captcha_webkey', models.CharField(blank=True, default='', help_text='Please add google captcha webkey.', max_length=255, null=True)),
                ('site_title', models.CharField(default='', help_text='Please enter a site title.', max_length=255, verbose_name='Site tite')),
                ('site_name', models.CharField(default='', help_text='Please enter a site name.', max_length=255, verbose_name='Site name')),
                ('site_url', models.CharField(default='', help_text='Please enter a site url.', max_length=255, verbose_name='Site URL')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Top50',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ringtone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='config.ringtone')),
                ('sortable', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='top50_field', to='config.favoriteplugin')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SingleRingtonePlugin',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='config_singleringtoneplugin', serialize=False, to='cms.cmsplugin')),
                ('ringtone', models.ForeignKey(blank=True, help_text='Call ringtone object.', max_length=255, null=True, on_delete=django.db.models.deletion.CASCADE, to='config.ringtone')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='MetaModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tag_name', models.CharField(default='', max_length=255, verbose_name='Tag name')),
                ('tag_value', models.CharField(default='', max_length=255, verbose_name='Tag value')),
                ('content', models.TextField(default='', verbose_name='Content')),
                ('sortable', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='meta_field', to='config.seotool')),
            ],
            options={
                'verbose_name': 'Meta field',
                'verbose_name_plural': 'Meta fields',
            },
        ),
        migrations.CreateModel(
            name='LinkModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rel', models.CharField(default='', max_length=255, verbose_name='rel')),
                ('href', models.CharField(default='', max_length=255, verbose_name='href')),
                ('crossorigin', models.BooleanField(default=False)),
                ('sortable', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='link_field', to='config.seotool')),
            ],
            options={
                'verbose_name': 'Link field',
                'verbose_name_plural': 'Link fields',
            },
        ),
        migrations.CreateModel(
            name='FooterHyperlink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(help_text='Title of footer hyperlink.', max_length=255, verbose_name='Title')),
                ('link', models.CharField(default='#', help_text='Link of footer hyperlink.', max_length=255, verbose_name='Link')),
                ('sortable', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='footer_field', to='config.footerplugin')),
            ],
            options={
                'verbose_name': 'Footer hyperlink',
                'verbose_name_plural': 'Footer hyperlinks',
            },
        ),
        migrations.AddField(
            model_name='category',
            name='sortable',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='category_field', to='config.categoryplugin'),
        ),
        migrations.AddField(
            model_name='category',
            name='title',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cms.title'),
        ),
    ]
